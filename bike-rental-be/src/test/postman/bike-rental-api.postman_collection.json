{
	"info": {
		"_postman_id": "3f164420-0af7-4b8e-8f0d-157f00410dd8",
		"name": "bike-rental-api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "43388435"
	},
	"item": [
		{
			"name": "endpoints",
			"item": [
				{
					"name": "bike station",
					"item": [
						{
							"name": "get all bike stations",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/bike-stations",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"bike-stations"
									]
								}
							},
							"response": []
						},
						{
							"name": "create bike station",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let responseData = pm.response.json();",
											"pm.collectionVariables.set(\"bikeStationId\", responseData.id);",
											"console.log(\"Saved bikeStationId:\", responseData.id);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"latitude\": 54.687157,\n  \"longitude\": 25.279652,\n  \"capacity\": 10,\n  \"address\": \"Cathedral Square, Vilnius, Lithuania\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/bike-stations",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"bike-stations"
									]
								}
							},
							"response": []
						},
						{
							"name": "get bike station",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/bike-stations/{{bikeStationId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"bike-stations",
										"{{bikeStationId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "update bike station",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"capacity\": 3,\n  \"address\": \"Cathedral Square, Vilnius, Lithuania\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/bike-stations/{{bikeStationId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"bike-stations",
										"{{bikeStationId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete bike station",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.unset(\"bikeStationId\");",
											"console.log(\"Removed bikeStationId\");"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/bike-stations/{{bikeStationId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"bike-stations",
										"{{bikeStationId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "bike",
					"item": [
						{
							"name": "create bike",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let bike = pm.response.json();",
											"pm.collectionVariables.set(\"bikeId\", bike.id);",
											"console.log(\"Saved bikeId:\", bike.id);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"currentBikeStationId\": \"{{bikeStationId}}\",\n  \"state\": \"FREE\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/bikes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"bikes"
									]
								}
							},
							"response": []
						},
						{
							"name": "bulk create bikes",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let bikes = pm.response.json();",
											"pm.test(\"Bulk bike creation succeeded\", function () {",
											"    pm.expect(bikes.length).to.be.above(0);",
											"});",
											"if (bikes.length > 0) {",
											"    pm.collectionVariables.set(\"bikeId\", bikes[0].id);",
											"    console.log(\"Saved first bike id as bikeId:\", bikes[0].id);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"bikeStationId\": \"{{bikeStationId}}\",\n  \"numberOfBikes\": 3\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/bikes/bulk",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"bikes",
										"bulk"
									]
								}
							},
							"response": []
						},
						{
							"name": "get all bikes",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/bikes",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"bikes"
									]
								}
							},
							"response": []
						},
						{
							"name": "get bike by id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/bikes/{{bikeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"bikes",
										"{{bikeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "update bike",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"currentBikeStationId\": \"{{bikeStationId}}\",\n  \"state\": \"IN_USE\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/bikes/{{bikeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"bikes",
										"{{bikeId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete bike",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/bikes/{{bikeId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"bikes",
										"{{bikeId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "booking",
					"item": [
						{
							"name": "create booking",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let booking = pm.response.json();",
											"pm.collectionVariables.set(\"bookingId\", booking.id);",
											"console.log(\"Saved bookingId:\", booking.id);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"bookedBikeId\": \"{{bikeId}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/bookings",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"bookings"
									]
								}
							},
							"response": []
						},
						{
							"name": "deactivate booking",
							"request": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/bookings/{{bookingId}}/deactivate",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"bookings",
										"{{bookingId}}",
										"deactivate"
									]
								}
							},
							"response": []
						},
						{
							"name": "get booking",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/bookings/{{bookingId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"bookings",
										"{{bookingId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "trip",
					"item": [
						{
							"name": "start trip",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let trip = pm.response.json();",
											"pm.collectionVariables.set(\"tripId\", trip.id);",
											"console.log(\"Saved tripId:\", trip.id);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"bikeId\": \"{{bikeId}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:8080/trips",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"trips"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "user",
					"item": [
						{
							"name": "get user status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let userStatus = pm.response.json();",
											"",
											"let booking = userStatus.booking;",
											"if (booking !== undefined) {",
											"    pm.environment.set(\"bookingId\", booking.id);",
											"    console.log(\"Saved bookingId:\", booking.id);",
											"}",
											"",
											"let trip = userStatus.trip;",
											"if (trip !== undefined) {",
											"    let trip = pm.response.json();",
											"    pm.environment.set(\"tripId\", trip.id);",
											"    console.log(\"Saved tripId:\", trip.id);",
											"}"
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/users/status",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"users",
										"status"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{BEARER_TOKEN}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "bikeStationId",
			"value": "00000000-0000-0000-0000-000000000000",
			"type": "default"
		},
		{
			"key": "bikeId",
			"value": "00000000-0000-0000-0000-000000000000",
			"type": "default"
		},
		{
			"key": "bookingId",
			"value": "00000000-0000-0000-0000-000000000000",
			"type": "default"
		},
		{
			"key": "tripId",
			"value": "00000000-0000-0000-0000-000000000000",
			"type": "string"
		}
	]
}